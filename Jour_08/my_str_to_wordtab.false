/*
** my_str_to_wordtab.c for my str to word tab in /u/all/sundas_c/cu/rendu/piscine/Jour_08
** 
** Made by christophe sundas
** Login   <sundas_c@epitech.net>
** 
** Started on  Thu Oct 16 15:10:52 2008 christophe sundas
** Last update Tue Oct 21 16:31:43 2008 christophe sundas
*/

#include <stdlib.h>

char	**my_str_to_wordtab(char *str);
int	my_isalphanum(char c);
int	strlen_alphanum(char *str);
int	count_printable(char *str);

char	**my_str_to_wordtab(char *str)
{
  int	stringlen;
  int	word;
  char	**tab;
  int	i;

  i = 0;
  word = 0;
  tab = malloc(sizeof(char *) * (count_printable(str) + 1));
  while (str[i] != '\0')
    {
      while (my_isalphanum(str[i]) != 1)
	{
	  i = i + 1;
	}
      stringlen = strlen_alphanum(str + i);
      tab[word] = malloc(sizeof(char) * (stringlen + 1));
      if (tab[word] == NULL)
	return (NULL);
      my_strncpy(tab[word], str + i, stringlen);
      my_strncat(tab[word], "\0", 1);
      word = word + 1;
      i = i + stringlen;
    }
  tab[word] = NULL;
  return (tab);
}

int	my_isalphanum(char c)
{
  if ((c >= '0') && (c <= '9'))
    return (1);
      if ((c >= 'A') && (c <= 'Z'))
	return (1);
      if ((c >= 'a') && (c <= 'z'))
	return (1);
  return (0);
}

int	strlen_alphanum(char *str)
{
  int	i;

  i = 0;
  while (my_isalphanum(str[i]))
    {
      i = i + 1;
    }
  return (i);
}

int	count_printable(char *str)
{
  int	i;
  int	cpt;
  int	flag;
  int	len;

  i = 0;
  flag = 0;
  cpt = 0;
  len = my_strlen(str);
  while (i < len)
    {
      if (my_isalphanum(str[i]))
	{
	  if (flag == 0)
	    {
	      flag = 1;
	      cpt = cpt + 1;
	    }
	}
      else
	flag = 0;
      i = i + 1;
    }
  return (cpt);
}

int	main(int argc, char **argv)
{
  my_str_to_wordtab(argv[1]);
}
